@model SaleManagementSystem.Model.DAL.MenuItem

@{
    Layout = "~/Views/Shared/_LayoutForModal.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="modal fade" id="MyModal">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Detail Menu Items</h4>
                </div>
                <div class="modal-body">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)
                        <div class="row">
                            <div class="form-group row col-md-6">
                                @Html.LabelFor(model => model.ItemId, "Item Name", htmlAttributes: new { @class = "control-label col-md-4 text-right mt-2" })
                                <div class="col-md-8">
                                    @Html.DropDownList("ItemId", null, "Select an Item", htmlAttributes: new { @id = "item", @class = "form-control", required = "required", title = "Item is required" })
                                    @Html.ValidationMessageFor(model => model.ItemId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row col-md-6">
                                @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-4 text-right mt-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Rating" } })
                                    @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group row col-md-6">
                                @Html.LabelFor(model => model.Item.Unit, htmlAttributes: new { @class = "control-label col-md-4 text-right mt-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Item.Unit, new { htmlAttributes = new { @class = "form-control", @placeholder = "Unit", @readonly = "readonly" } })
                                </div>
                            </div>

                            <div class="form-group row col-md-6">
                                @Html.LabelFor(model => model.Item.Amount, htmlAttributes: new { @class = "control-label col-md-4 text-right mt-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.Item.Amount, new { htmlAttributes = new { @class = "form-control", @placeholder = "Amount", @readonly = "readonly" } })
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="form-group row col-md-6">
                                @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-4 text-right mt-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Select a date" } })
                                    @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group row col-md-6">
                                @Html.LabelFor(model => model.LastUsedDate, htmlAttributes: new { @class = "control-label col-md-4 text-right mt-2" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LastUsedDate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Select a date" } })
                                    @Html.ValidationMessageFor(model => model.LastUsedDate, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        @Html.HiddenFor(model => model.IsDeleted)
                        @Html.HiddenFor(model => model.InsAt)
                        @Html.HiddenFor(model => model.InsBy)
                    </div>
                </div><!-- /.modal-body -->
                <div class="modal-footer">
                    <div class="form-actions no-color text-center">
                        <input type="submit" value="Save" class="btn btn-default" id="save" />
                        <button type="button" class="btn btn-light" style=" border: 0.5px solid #a8a9ad;" data-dismiss="modal">Cancel</button>
                    </div>
                </div><!-- /.modal-footer -->
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div>
    <!-- /.modal -->
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#item').change(function () {
                $.ajax({
                    url: "/MenuItems/PopulateItem",
                    type: "post",
                    data: { id: $(this).val() },
                    success: function (res) {
                        if (res.data === null) {
                            $('#Item_Unit').val("");
                            $('#Item_Amount').val("");
                        } else {
                            $('#Item_Unit').val(res.data.Unit);
                            $('#Item_Amount').val(res.data.Amount);
                        }
                    },
                    error: function (res) {
                        console.log(res);
                    }
                });
            });
        });
    </script>
    <script>
        $(document).ready(function () {
            $('#CreateDate').datepicker({
                todayBtn: "linked",
                todayHighlight: true,
                closeText: 'Closed',
                orientation: "left",
                format: 'mm/dd/yyyy',
                autoclose: true,
            }).on('changeDate', function (selected) {
                var startDate = new Date(selected.date.valueOf());
                $('#LastUsedDate').datepicker('setStartDate', startDate);
            }).on('clearDate', function (selected) {
                $('#LastUsedDate').datepicker('setStartDate', null);
            });

            $('#LastUsedDate').datepicker({
                todayBtn: "linked",
                closeText: 'Closed',
                todayHighlight: true,
                orientation: "left",
                format: 'mm/dd/yyyy',
                autoclose: true,
            }).on('changeDate', function (selected) {
                var endDate = new Date(selected.date.valueOf());
                $('#LastUsedDate').datepicker('setEndDate', endDate);
            }).on('clearDate', function (selected) {
                $('#LastUsedDate').datepicker('setEndDate', null);
            });

        });
    </script>
}